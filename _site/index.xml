<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Outsider Data Science</title>
<link>outsiderdata.netlify.app/index.html</link>
<atom:link href="outsiderdata.netlify.app/index.xml" rel="self" type="application/rss+xml"/>
<description>Putting what&#39;s in there, out there. With R!</description>
<generator>quarto-1.3.433</generator>
<lastBuildDate>Fri, 09 Jun 2023 04:00:00 GMT</lastBuildDate>
<item>
  <title>Kakhovka Dam Disaster</title>
  <dc:creator>Art Steinmetz</dc:creator>
  <link>outsiderdata.netlify.app/posts/2023-06-09-kakhovka-dam/index.html</link>
  <description><![CDATA[ 



<section id="some-history" class="level2">
<h2 class="anchored" data-anchor-id="some-history">Some History</h2>
<p>The war in Ukraine has spawned yet another disaster, the destruction of the dam across the Dnipro river, upstream from Kherson City. This is an ecological and humanitarian disaster as vast acres of settlements, farmlands and wetlands have been destroyed.</p>
<p>This marks the third time a dam in this region has been destroyed. First in 1941, the Soviets blew up a dam to impede the advancing Germans in southern city of Zaporizhzhia, upstream of the present dam. <a href="https://www.rferl.org/a/european-remembrance-day-ukraine-little-known-ww2-tragedy/25083847.html">Tens of thousands of people were killed</a> among Ukrainians and Red Army soldiers (the Germans were not yet in the area). The Germans repaired it. Then, in 1943, the Germans blew it up again to thwart the advancing Soviets.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="outsiderdata.netlify.app/posts/2023-06-09-kakhovka-dam/img/Bundesarchiv_B_145_Bild-F016197-0003_Wasserkraftwerk_am_Dnjepr-e1566129751457.jpg" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Source: Bundesarchiv</figcaption>
</figure>
</div>
<p>Ironically, just as the destruction of the Kakhovka dam is an ecological tragedy, so too, was its construction. Many settlements and wetlands were submerged as the Dnipro river backed up to serve Stalin’s drive to collectivize and modernize agriculture.</p>
</section>
<section id="modeling-the-disaster" class="level2">
<h2 class="anchored" data-anchor-id="modeling-the-disaster">Modeling the Disaster</h2>
<p>Last week, as water poured through the gap where the Kakhovka dam used to be, water levels surged downstream. This was a rolling disaster, with the river delta at the Black Sea seeing the flow last. We can make a rough attempt to visualize the effect of the rising water with an animated inundation map. This is a pretty sophisticated undertaking. Fortunately, there are tools in the form of R packages that have been developed in the last several years that make it easy for anyone to make inundation maps. There are many pieces of the project below where I can not believe how few lines of code are needed. Since there may be some readers not interested in the coding, the code is hidden by default and you may click on the <em>code</em> buttons to make it visible.</p>
<p>Let’s see how easy it is.</p>
<section id="get-the-lower-dnipro-river." class="level3">
<h3 class="anchored" data-anchor-id="get-the-lower-dnipro-river.">Get the Lower Dnipro River.</h3>
<p>As usual, we load the required packages. Then I just looked at Google Maps to find the coordinates of a region spanning from the Kakhovka dam in the east to the Dnipro delta in the west. Since they were displayed in degrees, minutes and seconds, I wrote a quickie function to convert them to decimal. Note that longitude west of zero and latitude south of zero are expressed as negative, neither of which is true here. Longitudes in the United States, for instance, have a negative sign.</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(fs)</span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># GIS packages</span></span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(elevatr)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(rayshader)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(sf)</span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(raster)</span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(leaflet)</span>
<span id="cb1-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(osmdata)</span>
<span id="cb1-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(basemaps)</span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make GIFs</span></span>
<span id="cb1-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(magick)</span>
<span id="cb1-13"></span>
<span id="cb1-14">dms_to_dec <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">deg=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sec=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) {</span>
<span id="cb1-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(deg <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> min <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> sec <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3600</span>)</span>
<span id="cb1-16">}</span>
<span id="cb1-17">kh_loc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lat =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dms_to_dec</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">46</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">51</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">00</span>),<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dms_to_dec</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">46</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">00</span>)),</span>
<span id="cb1-18">                             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lon=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dms_to_dec</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">09</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">00</span>),<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dms_to_dec</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">33</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">00</span>)) )</span></code></pre></div>
</details>
</div>
<p>Here is the first “wow, that was easy” moment. We can confirm our coordinates by quickly pulling in a map with multiple layers, one for geographic names, and one for the satellite image. This is done with the <code>leaflet</code> package.</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">leaflet</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb2-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fitBounds</span>(kh_loc<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lon[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],kh_loc<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],kh_loc<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lon[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>],kh_loc<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb2-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">addProviderTiles</span>(providers<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Esri.WorldImagery) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb2-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">addProviderTiles</span>(providers<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>CartoDB.PositronOnlyLabels,</span>
<span id="cb2-5">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">options =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">providerTileOptions</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">opacity =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span></code></pre></div>
</details>
<div class="cell-output-display">
<div class="leaflet html-widget html-fill-item-overflow-hidden html-fill-item" id="htmlwidget-965740ba9fe02fb81927" style="width:100%;height:464px;"></div>
<script type="application/json" data-for="htmlwidget-965740ba9fe02fb81927">{"x":{"options":{"crs":{"crsClass":"L.CRS.EPSG3857","code":null,"proj4def":null,"projectedBounds":null,"options":{}}},"fitBounds":[46.85,32.15,46.3,33.41666666666666,[]],"calls":[{"method":"addProviderTiles","args":["Esri.WorldImagery",null,null,{"errorTileUrl":"","noWrap":false,"detectRetina":false}]},{"method":"addProviderTiles","args":["CartoDB.PositronOnlyLabels",null,null,{"errorTileUrl":"","noWrap":false,"opacity":1,"detectRetina":false}]}]},"evals":[],"jsHooks":[]}</script>
</div>
</div>
<p>This is an interactive map. We can pan and zoom to our heart’s content. There are some interesting observations we can make. The dam is at the northeast corner of the image. We can see the swampy lowlands below the dam. They lie mainly to the south of the primary course of the river. Notice the crop circles to the east and south of the reservoir. There are many visible if we pan a bit to the east. This tells us that the crops grown there are irrigated by water pumped to center-pivot sprinkler systems. Presumably the water comes from the reservoir which is now disappearing.</p>
<p><img src="outsiderdata.netlify.app/posts/2023-06-09-kakhovka-dam/img/pivot_sprinkler.jpg" class="img-fluid"></p>
<p>source: iStock</p>
<p>Just to the east of the dam we also see the Crimean canal stretching south, which is a major source of fresh water for the Crimean peninsula. This, too, will cease to function.</p>
</section>
<section id="get-the-elevations" class="level3">
<h3 class="anchored" data-anchor-id="get-the-elevations">Get the Elevations</h3>
<p>We are interested in modeling which parts of the river basin got submerged after the destruction of the dam. Obviously we need to know the elevation of the land. Using the <code>elevatr</code> package it only takes one line of code to retrieve a topographic map from the OpenTopography data set. This gets us a raster object that contains a matrix with elevations at each point. It also contains metadata with the coordinate system.</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">kherson_dnipro <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> kh_loc <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_as_sf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">coords =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lon"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lat"</span>),<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">crs =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4326</span>)</span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get the topo matrix</span></span>
<span id="cb3-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (fs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file_exists</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'data/kherson_elev.rdata'</span>)){</span>
<span id="cb3-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">load</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'data/kherson_elev.rdata'</span>)</span>
<span id="cb3-7">} <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb3-8">kherson_elev <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_elev_raster</span>(kherson_dnipro, </span>
<span id="cb3-9">                                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">src =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gl1"</span>, </span>
<span id="cb3-10">                                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">clip =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bbox"</span>,</span>
<span id="cb3-11">                                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">verbose =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb3-12">                                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">serial=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) </span>
<span id="cb3-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">save</span>(kherson_elev,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'data/kherson_elev.rdata'</span>)</span>
<span id="cb3-14"></span>
<span id="cb3-15">}</span>
<span id="cb3-16">kherson_elev</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>class      : RasterLayer 
dimensions : 1980, 4560, 9028800  (nrow, ncol, ncell)
resolution : 0.0002777778, 0.0002777778  (x, y)
extent     : 32.14986, 33.41653, 46.30014, 46.85014  (xmin, xmax, ymin, ymax)
crs        : +proj=longlat +datum=WGS84 +no_defs 
source     : memory
names      : file2c3031276412 
values     : -51, 107  (min, max)</code></pre>
</div>
</div>
<p>A quick and dirty plot of the matrix shows the flood situation. Bright green is high ground. The blue isn’t necessarily water, just water and land very nearly at sea level. The color scale is in meters above sea level. South of the river are mostly very low-lying areas. Notably, these areas are Russian controlled today. The north side is in Ukrainian hands.</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">pal <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colorRampPalette</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"darkblue"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"limegreen"</span>))</span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(kherson_elev, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pal</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>))</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="outsiderdata.netlify.app/posts/2023-06-09-kakhovka-dam/index_files/figure-html/view elevations-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Now let’s create a more realistic view of the ground and show the rising water. To do this we’ll use the <code>rayshader</code> package. When <a href="https://twitter.com/tylermorganwall">Tyler Morgan-Wall</a> released this package a few years ago, he opened up huge visualization vistas to the R community. We will just be touching the surface of its capabilities here. We’ll use two key features, the ability to shade the surface for a 3D effect and to detect and color bodies of water. Let’s exaggerate the z-axis a bit since this is generally very flat ground and we want to see subtle terrain changes. Like the <code>ggplot2</code> package, we can start with a base plot and add layers.</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">kh_elmat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">raster_to_matrix</span>(kherson_elev)</span>
<span id="cb6-2">base_map <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> kh_elmat <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb6-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sphere_shade</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">texture =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"imhof1"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">zscale =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>)</span>
<span id="cb6-4"></span>
<span id="cb6-5">base_map <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb6-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_water</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">detect_water</span>(kh_elmat),<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"desert"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb6-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_map</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="outsiderdata.netlify.app/posts/2023-06-09-kakhovka-dam/index_files/figure-html/preview water-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>We can clearly see the reservoir in the east, the delta in the west, the (exaggerated) canyons carved by the Dnipro tributaries and the narrow river connecting them.</p>
</section>
<section id="the-human-dimension" class="level3">
<h3 class="anchored" data-anchor-id="the-human-dimension">The Human Dimension</h3>
<p>What we don’t see are where the people are and this tragedy is very much a human one. We can get a sense of human presence by creating a road overlay using OpenStreetMap data. Again, the code needed to do this is trivially simple. Note the returned object has several layers but we are only interested in the <code>osm_points</code>.</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (fs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file_exists</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'data/kherson_roads.rdata'</span>)){</span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">load</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'data/kherson_roads.rdata'</span>)</span>
<span id="cb7-3">} <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb7-4">  </span>
<span id="cb7-5">  kherson_roads <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> osmdata<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">opq</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_bbox</span>(kherson_dnipro)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-6">    osmdata<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_osm_feature</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"highway"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-7">    osmdata<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">osmdata_sf</span>()</span>
<span id="cb7-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">save</span>(kherson_roads,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'data/kherson_roads.rdata'</span>)</span>
<span id="cb7-9">}</span>
<span id="cb7-10"></span>
<span id="cb7-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Take just the road layer and transform coordinates to our existing projection</span></span>
<span id="cb7-12">kherson_lines <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sf<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_transform</span>(kherson_roads<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>osm_lines,</span>
<span id="cb7-13">                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">crs =</span> raster<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">crs</span>(kherson_dnipro))</span>
<span id="cb7-14"></span>
<span id="cb7-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># a rayshader object we pre-generate now for speed later</span></span>
<span id="cb7-16">roads <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">generate_line_overlay</span>(</span>
<span id="cb7-17">  kherson_lines,</span>
<span id="cb7-18">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">heightmap =</span> kh_elmat,</span>
<span id="cb7-19">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">extent =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">extent</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">extent</span>(kherson_dnipro)),</span>
<span id="cb7-20">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb7-21">)</span>
<span id="cb7-22"></span>
<span id="cb7-23">kherson_roads</span></code></pre></div>
</details>
</div>
<p>Once again we do a quick and dirty plot to visualize the new layer. This is also super easy with the <code>geom_sf</code> geom in ggplot2.</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># View streets as a ggplot2 render </span></span>
<span id="cb8-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(kherson_lines, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> osm_id)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb8-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Kherson Roads from Open Street Map"</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="outsiderdata.netlify.app/posts/2023-06-09-kakhovka-dam/index_files/figure-html/preview streets-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="add-more-realism" class="level3">
<h3 class="anchored" data-anchor-id="add-more-realism">Add More Realism</h3>
<p>Let’s overlay a satellite image to lend more realism to the image. In particular this lets us see the individual farms. Once again, the task is trivially easy using the <code>basemaps</code> package and the freely available ESRI “World Imagery” maps. This is the same image we saw at the beginning of this project but now saved as a “PNG” file. Rayshader will automatically scale the image to match the other layers in the map.</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get image overlay</span></span>
<span id="cb9-2">satview <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">basemap_png</span>(</span>
<span id="cb9-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ext =</span> kherson_dnipro,</span>
<span id="cb9-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">map_service =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"esri"</span>,</span>
<span id="cb9-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">map_type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"world_imagery"</span>,</span>
<span id="cb9-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">map_res =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb9-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">verbose =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb9-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">browse =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb9-9">)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>Loading basemap 'world_imagery' from map service 'esri'...</code></pre>
</div>
</div>
</section>
<section id="visualize-the-rising-water" class="level3">
<h3 class="anchored" data-anchor-id="visualize-the-rising-water">Visualize the Rising Water</h3>
<p>When we put it all together, what do we get?</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">base_map <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> base_map <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb11-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_overlay</span>(satview)</span>
<span id="cb11-3"></span>
<span id="cb11-4">base_map <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb11-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_water</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">detect_water</span>(kh_elmat), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"desert"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb11-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_overlay</span>(roads)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb11-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_map</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="outsiderdata.netlify.app/posts/2023-06-09-kakhovka-dam/index_files/figure-html/full preview-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>We can see the city of Kherson on the north side, the settlements on the south side, mostly out of the swampy areas along the river and, on the upper east side, the town of Nova Kakhovka where the dam and hydroelectric station were.</p>
<p>Using this as a base, let’s create a function that shows the impact of rising water levels. Rayshader will color totally flat areas as water so we mimic rising water by setting the elevations of any point below the rising water level to zero. We can iterate by setting the water level higher and higher to put more of the land “under water.”</p>
<p>We have several layers in this map. The shading, the satellite view, the water level and the streets. Order matters. The shading gets obscured by the satellite image. The rising water covers the satellite image. The streets are drawn last and remain visible so we can see just where human-occupied areas are being flooded. All these are aesthetic choices.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note:
</div>
</div>
<div class="callout-body-container callout-body">
<p>At this point we should be clear about what this is and isn’t. The method we use here more properly would model rising sea levels. We don’t know exactly how the water affected each area at what time. We don’t know what the peak inundation level was for each area. Further, once the reservoir empties out, the water will recede. Let’s call this a “dramatization.” This does give a dramatic view of the scope of the destruction.</p>
</div>
</div>
<p>The function below will render a view of our map with a water level rise of zero though eight meters. Again, this doesn’t assume the water rose eight meters, only that it reached eight meters above sea level. That means land at an altitude of seven meters will be one meter underwater for an eight meter water rise. We save each a single image for each meter of water rise and speed things up by changing only the parts of the map which change with the water level.</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">plot_rising_water <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">water_level =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) {</span>
<span id="cb12-2"></span>
<span id="cb12-3">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># adjust elevations to simulate water</span></span>
<span id="cb12-4">  flood_elmat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(kh_elmat <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> water_level, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, kh_elmat)</span>
<span id="cb12-5">  </span>
<span id="cb12-6">  base_map <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb12-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_water</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">detect_water</span>(flood_elmat), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"desert"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb12-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add roads on top of water</span></span>
<span id="cb12-9">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_overlay</span>(roads) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb12-10">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">save_png</span>(</span>
<span id="cb12-11">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">filename =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"img/frames/flood_"</span>, </span>
<span id="cb12-12">                        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">formatC</span>(water_level, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">flag =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0"</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".png"</span>),</span>
<span id="cb12-13">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title_text =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(</span>
<span id="cb12-14">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Flood Inundation of the Dnipro</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">After Kakhovka Dam Destruction</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Water Level:"</span>,</span>
<span id="cb12-15">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">formatC</span>(water_level, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">flag =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span>),</span>
<span id="cb12-16">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" Meters"</span></span>
<span id="cb12-17">      ),</span>
<span id="cb12-18">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title_size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>,</span>
<span id="cb12-19">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title_bar_color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span></span>
<span id="cb12-20">    )</span>
<span id="cb12-21">  </span>
<span id="cb12-22">  </span>
<span id="cb12-23">}</span>
<span id="cb12-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># generate frames</span></span>
<span id="cb12-25"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">walk</span>(plot_rising_water)</span></code></pre></div>
</details>
</div>
<p>Now that we have saved nine still frames we can animate them into a short GIF file with almost no work at all. There are many ways to save a GIF animation with R. Here we use the <code>magick</code> package because we can create a smooth morph between frames which simulates rising water well.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note:
</div>
</div>
<div class="callout-body-container callout-body">
<p>We use <code>magick::image_resize()</code> to downscale the individual frames to get a GIF of manageable size. Careful readers might wonder why we didn’t earlier downscale the elevation matrix instead. That would have sped up all the operations above. Unfortunately, that would make the flooded regions look very blocky as we would lose too much terrain data.</p>
</div>
</div>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make GIF</span></span>
<span id="cb13-2">target_dir <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"img/frames"</span></span>
<span id="cb13-3">fnames <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"img</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">frames</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dir</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"img/frames"</span>))</span>
<span id="cb13-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">image_read</span>(fnames[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb13-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">image_resize</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1000x"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb13-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">image_morph</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb13-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">image_animate</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb13-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">image_write</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">path =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"img/flood.gif"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">format =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gif"</span>)</span></code></pre></div>
</details>
</div>
<p><img src="outsiderdata.netlify.app/posts/2023-06-09-kakhovka-dam/img/flood.gif" class="img-fluid" width="1002"></p>
<p>While we don’t know what the maximum water height was or if all of the specific areas shown above got inundated but we do know many did and this clearly shows the vulnerable areas and where people have been potentially displaced.</p>
</section>
</section>
<section id="now-you-try" class="level2">
<h2 class="anchored" data-anchor-id="now-you-try">Now You Try</h2>
<p>Here we modeled the disaster in Ukraine but you might use these techniques to visualize the risk of flooding where you are considering buying a house, for example. You might also check out the <a href="https://waterdata.usgs.gov/nwis/rt">USGS real-time stream gauge</a> data to see what happens when the creek rises. All you need are four corners on a map to get started.</p>
</section>
<section id="my-speculation" class="level2">
<h2 class="anchored" data-anchor-id="my-speculation">My Speculation</h2>
<p>It’s irrelevant to our project today but as of this writing, we don’t know for sure who blew up the dam. I certainly don’t know but I will make a couple observations. The dam is under Russian control and it looks like the explosion came from inside the structure. The Ukrainians control the Zaporizhzhia dam and there has been no talk of blowing that up. As we saw in WWII, both sides blew up dams to impede enemy advancement. There is one side that is advancing today and it’s the Ukrainians. The Russians would like to slow them down. While the water will recede the river basin will still be muddy, though note the area close to the dam did not widen much. Finally, while this potentially has one benefit for the Ukrainians by cutting the fresh water canal to Crimea, the Ukrainians could have destroyed just the canal and prevented the Russians from rebuilding it without blowing the dam. We shall see in the fullness of time.</p>


</section>

 ]]></description>
  <guid>outsiderdata.netlify.app/posts/2023-06-09-kakhovka-dam/index.html</guid>
  <pubDate>Fri, 09 Jun 2023 04:00:00 GMT</pubDate>
  <media:content url="outsiderdata.netlify.app/posts/2023-06-09-kakhovka-dam/img/flood.gif" medium="image" type="image/gif"/>
</item>
</channel>
</rss>
